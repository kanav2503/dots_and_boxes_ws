import 'package:flutter/material.dart';
import 'package:flutter/foundation.dart'; // for kDebugMode (optional)
import 'package:firebase_core/firebase_core.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:firebase_database/firebase_database.dart';

import 'firebase_options.dart'; // generated by FlutterFire CLI
import 'home_page.dart';

// Boots Firebase, signs in (anon for now), quick RTDB ping, then launches the app.
Future<void> main() async {
  WidgetsFlutterBinding.ensureInitialized();

  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );

  // To Do: Replace anonymous auth when you add real identities.
  final auth = await FirebaseAuth.instance.signInAnonymously();
  debugPrint('üîë anon UID=${auth.user?.uid}');

  // Lightweight connectivity check; keep this in debug only.
  if (kDebugMode) {
    FirebaseDatabase.instance
        .ref('test/ping')
        .set({'time': DateTime.now().toIso8601String()})
        .then((_) => debugPrint('‚úÖ RTDB ping OK'))
        .catchError((e) => debugPrint('‚ùå RTDB ping failed: $e'));
  }

  runApp(const DotsAndBoxesApp());
}

class DotsAndBoxesApp extends StatelessWidget {
  const DotsAndBoxesApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Dots & Boxes',
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
      ),
      home: const HomePage(),
      // debugShowCheckedModeBanner: false,
    );
  }
}
